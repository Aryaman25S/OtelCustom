apiVersion: v1
data:
  relay: |
    exporters:
      debug:
        verbosity: detailed
      otlphttp/custom:
        endpoint: http://host.docker.internal:8080/v1/metrics
        headers:
          Authorization: Bearer rand-token-here
        encoding: json
        compression: none
      custom:
        endpoint: "http://localhost:8080"
        enabled: true
        custom_field: "my-custom-value"
        
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
        
    processors:
      batch: {}
      k8sattributes:
        extract:
          annotations:
          - from: pod
            key_regex: (.*)
            tag_name: $$1
          labels:
          - from: pod
            key_regex: (.*)
            tag_name: $$1
          metadata:
          - k8s.namespace.name
          - k8s.deployment.name
          - k8s.statefulset.name
          - k8s.daemonset.name
          - k8s.cronjob.name
          - k8s.job.name
          - k8s.node.name
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.pod.start_time
        filter:
          node_from_env_var: K8S_NODE_NAME
        passthrough: false
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: connection
      memory_limiter:
        check_interval: 5s
        limit_percentage: 80
        spike_limit_percentage: 25
        
    receivers:
      k8s_cluster:
        allocatable_types_to_report: []
        auth_type: kubeConfig
        node_conditions_to_report: []
      k8s_events:
        auth_type: kubeConfig
      kubeletstats:
        auth_type: kubeConfig
        collection_interval: 20s
        endpoint: https://${env:NODE_IP}:10250
        insecure_skip_verify: true
        metric_groups:
        - container
        - pod
        - node
      otlp:
        protocols:
          grpc: null
          http: null
          
    service:
      extensions:
      - health_check
      pipelines:
        metrics:
          exporters:
          - debug
          - otlphttp/custom
          - custom  # Custom exporter ONLY for metrics
          processors:
          - k8sattributes
          - batch
          receivers:
          - kubeletstats
          - k8s_cluster
          - otlp
        logs:
          exporters:
          - debug
          - otlphttp/custom
          # Remove custom exporter from logs pipeline
          processors:
          - k8sattributes
          receivers:
          - k8s_events
        traces:
          exporters:
          - debug
          - otlphttp/custom
          # Remove custom exporter from traces pipeline
          processors:
          - k8sattributes
          receivers:
          - otlp
      telemetry:
        metrics:
          readers:
          - pull:
              exporter:
                prometheus:
                  host: ${env:MY_POD_IP}
                  port: 8888
kind: ConfigMap
metadata:
  name: opentelemetry-collector-agent
  namespace: otel2